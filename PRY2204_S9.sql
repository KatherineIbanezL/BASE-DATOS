-- Fase 3: Creación y poblamiento del esquema

-- LIMPIEZA DE TABLAS 
DROP TABLE ORDEN_MANTENCION CASCADE CONSTRAINTS;
DROP TABLE ASIGNACION CASCADE CONSTRAINTS;
DROP TABLE MAQUINA CASCADE CONSTRAINTS;
DROP TABLE JEFE_TURNO  CASCADE CONSTRAINTS;
DROP TABLE TECNICO_MANTENCION CASCADE CONSTRAINTS;
DROP TABLE OPERARIO CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE TIPO_MAQUINA CASCADE CONSTRAINTS;
DROP TABLE TURNO CASCADE CONSTRAINTS;
DROP TABLE CERTIFICACION CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE PLANTA CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE REPORTE_NOCHE CASCADE CONSTRAINTS;
DROP TABLE REPORTE_DIURNO CASCADE CONSTRAINTS;
-- LIMPIEZA SECUENCIA
DROP SEQUENCE SEQ_REGION;

-- CREACION TABLA REGION
CREATE TABLE REGION
(
    id_region NUMBER(2),
    nombre VARCHAR2(25) NOT NULL
);

-- CREACION TABLA COMUNA
CREATE TABLE COMUNA
(
    id_comuna NUMBER(4) GENERATED ALWAYS AS IDENTITY (START WITH 1050 INCREMENT BY 5),
    nombre VARCHAR2(25) NOT NULL,
    cod_region NUMBER(2) NOT NULL
);

--CREACION TABLA PLANTA
CREATE TABLE PLANTA
(
    id_planta NUMBER(2),
    nombre VARCHAR2(50) NOT NULL,
    direccion VARCHAR2(150) NOT NULL,
    cod_comuna NUMBER(4) NOT NULL
);

--CREACION TABLA SALUD
CREATE TABLE SALUD
(
    id_salud NUMBER(2),
    nombre VARCHAR2 (50) NOT NULL
);

--CREACION TABLA AFP
CREATE TABLE AFP
(
    id_afp NUMBER(3),
    nombre VARCHAR2(50) NOT NULL
);

-- CREACION TABLA CERTIFICACION
CREATE TABLE CERTIFICACION 
(
    id_cert NUMBER(3),
    nombre VARCHAR2(50) NOT NULL,
    nivel VARCHAR2(20)
);

-- CREACION TABLA TURNO
CREATE TABLE TURNO
(
    id_turno VARCHAR2(5),
    nombre VARCHAR2(10) NOT NULL,
    hora_ini CHAR(5) NOT NULL,
    hora_fin CHAR(5) NOT NULL
);

--CREACION TABLA TIPO_MAQUINA
CREATE TABLE TIPO_MAQUINA
(
    id_tipo_maquina NUMBER(2),
    nombre VARCHAR2(50) NOT NULL
);

-- CREACION TABLA EMPLEADO
CREATE TABLE EMPLEADO
(
    id_empleado NUMBER(4),
    rut VARCHAR2(8) NOT NULL,
    dv CHAR(1) NOT NULL,
    p_nombre VARCHAR2(25) NOT NULL,
    s_nombre VARCHAR2(25),
    apellido_p VARCHAR(25) NOT NULL,
    apellido_m VARCHAR2(25) NOT NULL,
    fecha_contratacion DATE NOT NULL,
    sueldo_base NUMBER(10) NOT NULL,
    activo CHAR(1) DEFAULT 'S' NOT NULL,
    cod_afp NUMBER(3) NOT NULL,
    cod_salud NUMBER(2) NOT NULL,
    id_planta NUMBER(2) NOT NULL,
    cod_empleado NUMBER(4) 
);

--CREACION TABLA OPERARIO
CREATE TABLE OPERARIO
(
    id_empleado NUMBER(4),
    categoria_procs VARCHAR2(20) NOT NULL,
    horas_estandar NUMBER(2) NOT NULL,
    cod_cert NUMBER(3)
);

-- CREACION TABLA TECNICO_MANTENCION
CREATE TABLE TECNICO_MANTENCION
(
    id_empleado NUMBER(4),
    especialidad VARCHAR2(20) NOT NULL,
    tiempo_resp VARCHAR2(20) NOT NULL,
    cod_cert NUMBER(3)
);

--CREACION TABLA JEFE_TURNO
CREATE TABLE JEFE_TURNO
(
    id_empleado NUMBER(4),
    area_respons VARCHAR2(100) NOT NULL,
    max_operarios NUMBER(2) NOT NULL
);

--CREACION TABLA MAQUINA
CREATE TABLE MAQUINA
(
    num_maquina NUMBER(3),
    id_planta NUMBER(2),
    nombre VARCHAR2(40) NOT NULL,
    activo CHAR(1) DEFAULT 'S' NOT NULL,
    id_tipo_maquina NUMBER(2) NOT NULL
);

-- CREACION TABLA ORDEN_MANTENCION
CREATE TABLE ORDEN_MANTENCION
(
    id_orden NUMBER(2),
    fecha_progr DATE NOT NULL,
    fecha_ejec DATE,
    descripcion VARCHAR2(100) NOT NULL,
    cod_empleado NUMBER(4) NOT NULL,
    num_maquina NUMBER(3) NOT NULL,
    id_planta NUMBER(2) NOT NULL
);

-- CREACION TABLA ASIGNACION
CREATE TABLE ASIGNACION
(
    id_asignacion NUMBER(2),
    fecha DATE NOT NULL,
    rol_desemp VARCHAR2(20),
    cod_empleado NUMBER(4) NOT NULL,
    cod_turno VARCHAR2(5) NOT NULL,
    num_maquina NUMBER(3) NOT NULL,
    id_planta NUMBER(2) NOT NULL,
    cod_jefe_turno NUMBER(4) NOT NULL
);

-- CREACION CLAVE PRIMARIA, FORANEA, UNIQUE Y CHECK CONSTRAINT

-- TABLA REGION --------------------------------
-- PK ID
ALTER TABLE REGION
ADD CONSTRAINT PK_REGION PRIMARY KEY (id_region);

-- UNIQUE NOMBRE
ALTER TABLE REGION
ADD CONSTRAINT UN_REGION_NOMBRE UNIQUE (nombre);

-- TABLA COMUNA --------------------------------
-- PK ID
ALTER TABLE COMUNA
ADD CONSTRAINT PK_COMUNA PRIMARY KEY (id_comuna);

-- UNIQUE NOMBRE
ALTER TABLE COMUNA
ADD CONSTRAINT UN_COMUNA_NOMBRE UNIQUE (nombre);

-- FK ID REGION
ALTER TABLE COMUNA
ADD CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (cod_region) REFERENCES REGION (id_region);

-- TABLA PLANTA --------------------------------  
-- PK ID
ALTER TABLE PLANTA
ADD CONSTRAINT PK_PLANTA PRIMARY KEY (id_planta);

-- UNIQUE NOMBRE
ALTER TABLE PLANTA
ADD CONSTRAINT UN_PLANTA_NOMBRE UNIQUE (nombre);

-- FK ID COMUNA
ALTER TABLE PLANTA
ADD CONSTRAINT FK_PLANTA_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA (id_comuna);

-- TABLA SALUD --------------------------------  
-- PK ID
ALTER TABLE SALUD
ADD CONSTRAINT PK_SALUD PRIMARY KEY (id_salud);

-- UNIQUE NOMBRE
ALTER TABLE SALUD
ADD CONSTRAINT UN_SALUD_NOMBRE UNIQUE (nombre);

-- TABLA AFP --------------------------------  
-- PK ID
ALTER TABLE AFP
ADD CONSTRAINT PK_AFP PRIMARY KEY (id_afp);

-- UNIQUE NOMBRE
ALTER TABLE AFP
ADD CONSTRAINT UN_AFP_NOMBRE UNIQUE (nombre);

-- TABLA CERTIFICACION --------------------------------  
-- PK ID
ALTER TABLE CERTIFICACION
ADD CONSTRAINT PK_CERTIFICACION PRIMARY KEY (id_cert);

-- UNIQUE NOMBRE
ALTER TABLE CERTIFICACION
ADD CONSTRAINT UN_CERT_NOMBRE UNIQUE (nombre);

-- TABLA TURNO --------------------------------  
-- PK ID
ALTER TABLE TURNO
ADD CONSTRAINT PK_TURNO PRIMARY KEY (id_turno);

-- UNIQUE NOMBRE
ALTER TABLE TURNO
ADD CONSTRAINT UN_TURNO_NOMBRE UNIQUE (nombre);

-- CK NOMBRE
ALTER TABLE TURNO
ADD CONSTRAINT CK_TURNO_NOMBRE
CHECK (nombre IN ('Mañana', 'Tarde', 'Noche'));

-- TABLA TIPO_MAQUINA --------------------------------  
-- PK ID
ALTER TABLE TIPO_MAQUINA
ADD CONSTRAINT PK_TIPO_MAQUINA PRIMARY KEY (id_tipo_maquina);

-- UNIQUE NOMBRE
ALTER TABLE TIPO_MAQUINA
ADD CONSTRAINT UN_TIPO_M_NOMBRE UNIQUE (nombre);

-- TABLA EMPLEADO --------------------------------  
-- PK ID
ALTER TABLE EMPLEADO
ADD CONSTRAINT PK_EMPLEADO PRIMARY KEY (id_empleado);

-- UNIQUE RUT, DV
ALTER TABLE EMPLEADO
ADD CONSTRAINT UN_EMPLEADO_RUT_DV UNIQUE (rut, dv);

-- FK ID AFP
ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY (cod_afp) REFERENCES AFP (id_afp);

-- FK ID SALUD
ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY (cod_salud) REFERENCES SALUD (id_salud);

-- FK ID PLANTA
ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_EMPLEADO_PLANTA FOREIGN KEY (id_planta) REFERENCES PLANTA (id_planta);

-- FK ID EMPLEADO RELACION RECURSIVA
ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_EMPLEADO_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO (id_empleado);

-- CK ESTADO ACTIVO 
ALTER TABLE EMPLEADO
ADD CONSTRAINT CK_EMPLEADO_ACTIVO CHECK (activo IN ('S', 'N'));

-- TABLA OPERARIO --------------------------------  
-- PK ID HEREDADA DE EMPLEADO
ALTER TABLE OPERARIO
ADD CONSTRAINT PK_OPERARIO PRIMARY KEY (id_empleado);

-- FK ID EMPLEADO
ALTER TABLE OPERARIO
ADD CONSTRAINT FK_OPERARIO_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id_empleado);

-- FK ID CERTIFICACION
ALTER TABLE OPERARIO
ADD CONSTRAINT FK_OPERARIO_CERT FOREIGN KEY (cod_cert) REFERENCES CERTIFICACION (id_cert);

-- TABLA TECNICO_MANTENCION --------------------------------
-- PK ID HEREDADA DE EMPLEADO
ALTER TABLE TECNICO_MANTENCION
ADD CONSTRAINT PK_TEC_MANTENCION PRIMARY KEY (id_empleado);

--FK ID EMPLEADO
ALTER TABLE TECNICO_MANTENCION
ADD CONSTRAINT FK_TEC_MANTENCION_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id_empleado);

-- FK ID CERTIFICACION
ALTER TABLE TECNICO_MANTENCION
ADD CONSTRAINT FK_TEC_MANTENCION_CERT FOREIGN KEY (cod_cert) REFERENCES CERTIFICACION (id_cert);

-- TABLA JEFE_TURNO --------------------------------
-- PK ID HEREDADA DE EMPLEADO
ALTER TABLE JEFE_TURNO
ADD CONSTRAINT PK_JEFE_TURNO PRIMARY KEY (id_empleado);

-- FK ID EMPLEADO
ALTER TABLE JEFE_TURNO
ADD CONSTRAINT FK_JEFE_TURNO_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id_empleado);

-- TABLA MAQUINA --------------------------------  
-- PK COMPUESTA ID (num_maquina + id_planta)
ALTER TABLE MAQUINA
ADD CONSTRAINT PK_MAQUINA PRIMARY KEY (num_maquina, id_planta);

-- UNIQUE NOMBRE + ID TIPO_MAQUINA
ALTER TABLE MAQUINA
ADD CONSTRAINT UN_MAQUINA_NOM_TIPO UNIQUE (nombre, id_tipo_maquina);

-- FK ID PLANTA
ALTER TABLE MAQUINA
ADD CONSTRAINT FK_MAQUINA_PLANTA FOREIGN KEY (id_planta) REFERENCES PLANTA (id_planta);

-- FK ID TIPO_MAQUINA
ALTER TABLE MAQUINA
ADD CONSTRAINT FK_MAQUINA_TIPO_M FOREIGN KEY (id_tipo_maquina) REFERENCES TIPO_MAQUINA (id_tipo_maquina);

-- CK ESTADO ACTIVO MAQUINA
ALTER TABLE MAQUINA
ADD CONSTRAINT CK_MAQUINA_ACTIVO CHECK (activo IN ('S', 'N'));

-- TABLA ORDEN_MANTENCION --------------------------------  
-- PK ID
ALTER TABLE ORDEN_MANTENCION
ADD CONSTRAINT PK_ORDEN_MANTENCION PRIMARY KEY (id_orden);

-- FK ID EMPLEADO
ALTER TABLE ORDEN_MANTENCION
ADD CONSTRAINT FK_ORDEN_MANT_TEC_MANT FOREIGN KEY (cod_empleado) REFERENCES TECNICO_MANTENCION (id_empleado);

-- FK COMPUESTA NUM_MAQUINA + ID_PLANTA
ALTER TABLE ORDEN_MANTENCION
ADD CONSTRAINT FK_ORDEN_MANT_MAQUINA FOREIGN KEY (num_maquina, id_planta) REFERENCES MAQUINA (num_maquina, id_planta);

-- CK VALIDACION FECHA EJECUCION IGUAL O POSTERIOR A FECHA_PROGRAMACION (CUANDO NO SEA NULA)
ALTER TABLE ORDEN_MANTENCION
ADD CONSTRAINT CK_MANTENCION_FECHAS 
CHECK (
    fecha_ejec IS NULL
    OR fecha_ejec >= fecha_progr
);

-- TABLA ASIGNACION --------------------------------
-- PK ID 
ALTER TABLE ASIGNACION
ADD CONSTRAINT PK_ASIGNACION PRIMARY KEY (id_asignacion);

-- UNIQUE FECHA + EMPLEADO (UN EMPLEADO SE ASIGNA SOLO UNA VEZ X DIA)
ALTER TABLE ASIGNACION
ADD CONSTRAINT UN_ASIG_FECHA_EMPLEADO UNIQUE (fecha, cod_empleado);

-- FK ID EMPLEADO 
ALTER TABLE ASIGNACION
ADD CONSTRAINT FK_ASIGNACION_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO (id_empleado);

-- FK ID TURNO
ALTER TABLE ASIGNACION
ADD CONSTRAINT FK_ASIGNACION_TURNO FOREIGN KEY (cod_turno) REFERENCES TURNO (id_turno);

-- FK COMPUESTA NUM_MAQUINA + ID_PLANTA
ALTER TABLE ASIGNACION
ADD CONSTRAINT FK_ASIGNACION_MAQUINA FOREIGN KEY (num_maquina, id_planta) REFERENCES MAQUINA (num_maquina, id_planta);

-- FK ID JEFE_TURNO
ALTER TABLE ASIGNACION
ADD CONSTRAINT FK_ASIG_JEFE_TURNO FOREIGN KEY (cod_jefe_turno) REFERENCES JEFE_TURNO (id_empleado);

-- CREACION DE SECUENCIA TABLA REGION (INICIO EN 21 CON INCREMENTO EN 1)
CREATE SEQUENCE SEQ_REGION
START WITH 21
INCREMENT BY 1;

-- POBLACION DE TABLA REGION
INSERT INTO REGION (id_region, nombre) VALUES (SEQ_REGION.NEXTVAL, 'Región de Valparaíso');
INSERT INTO REGION (id_region, nombre) VALUES (SEQ_REGION.NEXTVAL, 'Región Metropolitana');

-- POBLACION DE TABLA COMUNA
INSERT INTO COMUNA (nombre, cod_region) VALUES ('Quilpué', 21);
INSERT INTO COMUNA (nombre, cod_region) VALUES ('Maipú', 22);

-- POBLACION TABLA PLANTA
INSERT INTO PLANTA (id_planta, nombre, direccion, cod_comuna) VALUES (45, 'Planta Oriente', 'Camino Industrial 1234', 1050);
INSERT INTO PLANTA (id_planta, nombre, direccion, cod_comuna) VALUES (46, 'Planta Costa', 'Av. Vidrieras 890', 1055);

-- POBLACION TABLA TURNO
INSERT INTO TURNO (id_turno, nombre, hora_ini, hora_fin) VALUES ('M0715', 'Mañana', '07:00', '15:00');
INSERT INTO TURNO (id_turno, nombre, hora_ini, hora_fin) VALUES ('N2307', 'Noche', '23:00', '07:00');
INSERT INTO TURNO (id_turno, nombre, hora_ini, hora_fin) VALUES ('T1523', 'Tarde', '15:00', '23:00');

-- FASE 4: RECUPERACION DE DATOS

-- INFORME 1: REGISTRO DE TURNO CON HORARIO INICIAL MAYOR A 20:00
-- CREACION DE TABLA REPORTE_NOCHE
CREATE TABLE REPORTE_NOCHE AS
SELECT 
    id_turno AS ID_TURNO,
    nombre AS NOMBRE_TURNO,
    hora_ini AS ENTRADA,
    hora_fin AS SALIDA
FROM TURNO
WHERE hora_ini > '20:00';

-- CONSULTA INFORME 1
SELECT ID_TURNO || ' ' || NOMBRE_TURNO AS TURNO,
    ENTRADA,
    SALIDA
FROM REPORTE_NOCHE
ORDER BY ENTRADA DESC;

-- INFORME 2: REGISTRO DE TURNOS DIURNOS
-- CREACION DE TABLA REPORTE_DIURNO
CREATE TABLE REPORTE_DIURNO AS
SELECT 
    id_turno AS ID_TURNO,
    nombre AS NOMBRE_TURNO,
    hora_ini AS ENTRADA,
    hora_fin AS SALIDA
FROM TURNO
WHERE hora_ini BETWEEN '06:00' AND '14:59';

-- CONSULTA INFORME 2
SELECT ID_TURNO || ' ' || NOMBRE_TURNO AS TURNO,
    ENTRADA,
    SALIDA
FROM REPORTE_DIURNO
ORDER BY ENTRADA ASC;

